// clang-format off

// ----- Paxcounter user config file ------
//
// --> adapt to your needs and use case <--
//
// Notes:
// 1. After editing, before "build", use "clean" button in PlatformIO!
// 2. Clear NVRAM of the board to delete previous stored runtime settings (pio run -t erase)

// Display settings
#define DISPLAYREFRESH_MS               1000    // Display refresh interval in ms (not used when display always on)
#define DISPLAYCONTRAST                 255     // Maximum contrast
#define DISPLAY_FLIP                    0       // Flip if needed
#define DISPLAYCYCLE                    10       // Disable auto page flip
#define SCREENSAVER                     0       // Disable screensaver
#define SCREENON                        1       // Keep screen permanently on
#define DISPLAY_IRQ                     0       // Disable display interrupt

// Power management
#define DISABLE_PM                      1       // Disable power management
#define DISABLE_DISPLAY_POWER_DOWN      1       // Prevent display from powering down

// Device options
#define VERBOSE                         1       // Keep debug output
#define BOOTMENU                        0       // No bootmenu
#define BOOTDELAY                       10      // Boot delay
#define BOOTTIMEOUT                     300     // time [seconds] while devices waits to finish upload a firmware file
#define SDLOGGING                       0       // no SD card logging

#define HAS_LED                         NOT_A_PIN  // Define this if missing
#define WIFI_MY_COUNTRY                 "01"    // World safe mode
#define HOMECYCLE                       30      // House keeping cycle in seconds

// Payload send cycle and encoding
#define SENDCYCLE                       30      // payload send cycle [seconds/2]
#define SLEEPCYCLE                      0       // no sleep mode
#define PAYLOAD_ENCODER                 1       // using plain payload encoding for MQTT
#define COUNTERMODE                     0       // cyclic counter mode
#define SYNCWAKEUP                      0       // no sync wakeup needed for MQTT

// default settings for transmission of sensor data (first list = data on / second line = data off)
#define PAYLOADMASK                                                                             \
            ((GPS_DATA | MEMS_DATA | COUNT_DATA | SENSOR1_DATA | SENSOR2_DATA | SENSOR3_DATA) & \
            (~BATT_DATA) & (~RESERVED_DATA))

// MAC sniffing settings
#define BLECOUNTER                      1       // enable BLE scanning
#define WIFICOUNTER                     1       // keep WiFi scanning enabled
#define RSSILIMIT                       0     // RSSI limit to filter out weak signals

// BLE scan parameters
#define BLESCANTIME                     0       // infinite scan duration
#define BLESCANWINDOW                   80     // increased scan window for better detection
#define BLESCANINTERVAL                 80     // 100% duty cycle for maximum detection

/* Note: guide for setting bluetooth parameters
*
* |< Scan Window >       |< Scan Window >       | ... |< Scan Window >       |
* |<    Scan Interval   >|<    Scan Interval   >| ... |<    Scan Interval   >|
* |<                   Scan duration                                        >|
*
* Scan duration sets how long scanning should be going on, before starting a new scan cycle. 0 means infinite (default).
* Scan window sets how much of the interval should be occupied by scanning. Should be >= BLESCANINTERVAL.
* Scan interval is how long scanning should be done on each channel. BLE uses 3 channels for advertising.
* -> Adjust these values with power consumption in mind if power is limited.
* -> Scan interval can be changed during runtime by remote comammand.
*/

// WiFi scan parameters
#define WIFI_MY_COUNTRY                 "01"    // world safe mode
#define	WIFI_CHANNEL_SWITCH_INTERVAL    50      // 0.5 sec channel switch
#define WIFI_CHANNEL_MAP                WIFI_CHANNEL_ALL

// LoRa payload default parameters
#define MEM_LOW                         2048    // [Bytes] low memory threshold triggering a send cycle
#define RETRANSMIT_RCMD                 5       // [seconds] wait time before retransmitting rcommand results
#define PAYLOAD_BUFFER_SIZE             51      // maximum size of payload block per transmit
#define PAYLOAD_OPENSENSEBOX            0       // send payload compatible to sensebox.de (swap geo position and pax data)
#define LORADRDEFAULT                   5       // 0 .. 15, LoRaWAN datarate, according to regional LoRaWAN specs [default = 5]
#define LORATXPOWDEFAULT                14      // 0 .. 255, LoRaWAN TX power in dBm [default = 14]
#define MAXLORARETRY                    500     // maximum count of TX retries if LoRa busy
#define SEND_QUEUE_SIZE                 10      // maximum number of messages in payload send queue [1 = no queue]

// Hardware settings
#define RGBLUMINOSITY                   30      // RGB LED luminosity
#define DISPLAYREFRESH_MS               40    // Display refresh interval in ms
#define DISPLAYCONTRAST                 80     // Maximum contrast
#define DISPLAYCYCLE                    3       // Disable auto page flip
#define HOMECYCLE                       30      // House keeping cycle in seconds

// Settings for BME680 environmental sensor
#define BME_TEMP_OFFSET                 5.0f    // Offset sensor on chip temp <-> ambient temp [default = 5Â°C]
#define STATE_SAVE_PERIOD               UINT32_C(360 * 60 * 1000) // update every 360 minutes = 4 times a day
#define BMECYCLE                        1       // bme sensor read cycle in seconds [default = 1 secs]

// OTA settings
#define USE_OTA                         0       // disable OTA
#define WIFI_MAX_TRY                    5       // maximum number of wifi connect attempts for OTA update [default = 20]
#define OTA_MAX_TRY                     5       // maximum number of attempts for OTA download and write to flash [default = 3]
#define OTA_MIN_BATT                    50      // minimum battery level for OTA [percent]
#define RESPONSE_TIMEOUT_MS             60000   // firmware binary server connection timeout [milliseconds]

// settings for syncing time of node with a time source (network / gps / rtc / timeserver)
#define TIME_SYNC_LORAWAN               0       // disable LoRa time sync
#define TIME_SYNC_LORASERVER            0       // disable LoRa timeserver
#define TIME_SYNC_INTERVAL              60      // sync time attempt each .. minutes from time source [default = 60], 0 means off
#define TIME_SYNC_INTERVAL_RETRY        10      // retry time sync after lost sync each .. minutes [default = 10], 0 means off
#define TIME_SYNC_SAMPLES               1       // number of time requests for averaging, max. 255
#define TIME_SYNC_CYCLE                 60      // delay between two time samples [seconds]
#define TIME_SYNC_TIMEOUT               400     // timeout waiting for timeserver answer [seconds]
#define TIME_SYNC_COMPILEDATE           0       // set to 1 to use compile date to initialize RTC after power outage [default = 0]
#define TIME_SYNC_TIMEZONE              "CET-1CEST,M3.4.0/2,M10.4.0/3" // Timezone in POSIX format (example shows Germany/Berlin)

// Ports on which the device sends and listenes on LoRaWAN and SPI
#define COUNTERPORT                     1       // counts
#define MACPORT                         0       // network commands
#define RCMDPORT                        2       // remote commands
#define STATUSPORT                      2       // remote command results
#define CONFIGPORT                      3       // config query results
#define GPSPORT                         4       // gps - NOTE: set to 1 to send combined GPS+COUNTERPORT payload
#define BUTTONPORT                      5       // button pressed signal
#define RESERVEDPORT                    6       // reserved (unused)
#define BMEPORT                         7       // BME680 sensor
#define BATTPORT                        8       // battery voltage
#define TIMEPORT                        9       // time query and response
#define SENSOR1PORT                     10      // user sensor #1
#define SENSOR2PORT                     11      // user sensor #2
#define SENSOR3PORT                     12      // user sensor #3

// Cayenne LPP Ports, see https://community.mydevices.com/t/cayenne-lpp-2-0/7510
#define CAYENNE_LPP1                    1       // dynamic sensor payload (LPP 1.0)
#define CAYENNE_LPP2                    2       // packed sensor payload (LPP 2.0)
#define CAYENNE_GPS                     3       // full scale GPS payload
#define CAYENNE_ACTUATOR                10	    // actuator commands
#define CAYENNE_DEVICECONFIG            11	    // device period configuration
#define CAYENNE_SENSORREAD              13	    // sensor period configuration
#define CAYENNE_SENSORENABLE            14	    // sensor enable configuration

// MQTT settings
#define MQTT_ETHERNET                   0       // using WiFi
#define MQTT_INTOPIC                    "store/commands"
#define MQTT_USER                       ""          // set your MQTT credentials if needed
#define MQTT_PASSWD                     ""
#define MQTT_RETRYSEC                   20

#define HAS_LORA                        0       // make sure LoRa is also disabled since we're not using it

// Serial Output settings
#define SERIAL_OUTPUT                    1       // enable serial output
#define SERIAL_BAUD                      115200  // serial baud rate
#define SERIAL_OUTPUT_INTERVAL           1000    // output interval in ms
#define SERIAL_JSON_OUTPUT               1       // output in JSON format

// WiFi Configuration
#define WIFI_SSID                       "LastrillaWIFI"
#define WIFI_PASSWORD                   "cp880uegkg"
#define MQTT_ETHERNET                   0       // using WiFi

// MQTT Configuration
#define HAS_MQTT                        1       // enable MQTT
#define MQTT_SERVER                     "139.162.20.204"
#define MQTT_PORT                       1883
#define MQTT_USER                       ""
#define MQTT_PASSWD                     ""
#define MQTT_RETRYSEC                   20
#define MQTT_CLIENTNAME                 "esp32-paxcounter"
#define MQTT_OUTTOPIC                   "wif-counter/s_rperez/livingroom/s03"
#define MQTT_DEVICE_TOPIC               "wif-counter/s_rperez/livingroom/s03/devices"
#define MQTT_SEND_INTERVAL              30      // Interval in seconds to send MQTT updates
#define MQTT_TRIGGER_PIN                2       // GPIO pin for the button
#define MQTT_TRIGGER_MODE               INPUT_PULLUP

// Serial Configuration
#define SERIAL_OUTPUT                   1       // enable serial output
#define SERIAL_BAUD                     115200
#define SERIAL_OUTPUT_INTERVAL          1000    // output interval in ms
#define SERIAL_JSON_OUTPUT              1       // output in JSON format

// Disabled Features
#define HAS_LORA                        0       // disable LoRa

