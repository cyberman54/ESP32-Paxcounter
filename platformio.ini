; PlatformIO Project Configuration File
; NOTE: PlatformIO v4 is needed!
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html


; ---> SELECT THE TARGET PLATFORM HERE! <---
[board]
;halfile = generic.h
;halfile = ebox.h
;halfile = eboxtube.h
;halfile = ecopower.h
;halfile = heltec.h
;halfile = heltecv2.h
;halfile = ttgov1.h
;halfile = ttgov2.h
;halfile = ttgov21old.h
halfile = ttgov21new.h
;halfile = ttgofox.h
;halfile = ttgobeam.h
;halfile = ttgobeam10.h
;halfile = fipy.h
;halfile = lopy.h
;halfile = lopy4.h
;halfile = lolin32litelora.h
;halfile = lolin32lora.h
;halfile = lolin32lite.h
;halfile = wemos32oled.h
;halfile = wemos32matrix.h
;halfile = octopus32.h
;halfile = tinypico.h
;halfile = tinypicomatrix.h
;halfile = m5core.h
;halfile = m5fire.h

[platformio]
; upload firmware to board with usb cable
default_envs = usb
; upload firmware to a jfrog bintray repository
;default_envs = ota
; use latest versions of libraries
;default_envs = dev
description = Paxcounter is a device for metering passenger flows in realtime. It counts how many mobile devices are around.

[common]
; for release_version use max. 10 chars total, use any decimal format like "a.b.c"
release_version = 1.9.92
; DEBUG LEVEL: For production run set to 0, otherwise device will leak RAM while running!
; 0=None, 1=Error, 2=Warn, 3=Info, 4=Debug, 5=Verbose
debug_level = 3
extra_scripts = pre:build.py
otakeyfile = ota.conf
lorakeyfile = loraconf.h
lmicconfigfile = lmic_config.h
platform_espressif32 = espressif32@1.11.2
monitor_speed = 115200
upload_speed = 115200
lib_deps_lora =
    MCCI LoRaWAN LMIC library@>=3.1.0 ; MCCI LMIC by Terrill Moore
lib_deps_display =
    ss_oled@>=3.3.1 ; simple and small OLED lib by Larry Bank
    BitBang_I2C@>=1.3.0
    QRCode@>=0.0.1
lib_deps_matrix_display =
    Ultrathin_LED_Matrix@>=1.0.0
lib_deps_rgbled =
    SmartLeds@>=1.1.6
lib_deps_gps =
    1655@>=1.0.2 ; #1655 TinyGPSPlus by Mikal Hart
lib_deps_sensors =
    Adafruit Unified Sensor@>=1.1.1
    Adafruit BME280 Library@>=2.0.0
    Adafruit BMP085 Library@>=1.0.1
    BSEC Software Library@1.5.1474
lib_deps_basic =
    ArduinoJson@^5.13.1
    76@>=1.2.4 ; #76 Timezone by Jack Christensen
    274@>=2.3.4 ; #274 RTC by Michael Miller
    SimpleButton
    AXP202X_Library@>=1.1.0 ; AXP202 PMU lib by Lewis He
    esp32-micro-sdcard
lib_deps_all =
    ${common.lib_deps_basic}
    ${common.lib_deps_lora}
    ${common.lib_deps_display}
    ${common.lib_deps_rgbled}
    ${common.lib_deps_gps}
    ${common.lib_deps_sensors}
    ${common.lib_deps_matrix_display}
build_flags_basic =
    -include "src/hal/${board.halfile}"
    -include "src/paxcounter.conf"
    -w
    '-DCORE_DEBUG_LEVEL=${common.debug_level}'
    '-DLOG_LOCAL_LEVEL=${common.debug_level}'
    '-DPROGVERSION="${common.release_version}"'
build_flags_sensors =
    -Llib/Bosch-BSEC/src/esp32/
    -lalgobsec
build_flags_all =
    ${common.build_flags_basic}
    ${common.build_flags_sensors}
    -mfix-esp32-psram-cache-issue

[env]
framework = arduino
board = esp32dev
board_build.partitions = min_spiffs.csv
upload_speed = ${common.upload_speed}
platform = ${common.platform_espressif32}
lib_deps = ${common.lib_deps_all}
build_flags = ${common.build_flags_all}
upload_protocol = ${common.upload_protocol}
extra_scripts = ${common.extra_scripts}
monitor_speed = ${common.monitor_speed}

[env:ota]
upload_protocol = custom

[env:usb]
upload_protocol = esptool

[env:dev]
upload_protocol = esptool
build_type = debug
platform = https://github.com/platformio/platform-espressif32.git#develop
platform_packages = framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git
